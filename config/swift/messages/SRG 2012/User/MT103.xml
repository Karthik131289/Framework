<?xml version="1.0" encoding="UTF-8" ?>
<SwiftMessageFormat name="MT103">
	<standard-version><![CDATA[SRG 2012]]></standard-version>
	<DescriptiveName><![CDATA[Single Customer Credit Transfer]]></DescriptiveName>
	<Category><![CDATA[Customer Payments & Cheques]]></Category>
	<Description><![CDATA[This message type is sent by or on behalf of the financial institution of the ordering customer, directly or through (a) correspondent(s), to the financial institution of the beneficiary customer.

It is used to convey a funds transfer instruction in which the ordering customer or the beneficiary customer, or both, are non-financial institutions from the perspective of the Sender.

This message may only be used for clean payment instructions. It must not be used to advise the remitting bank of a payment for a clean, eg, cheque, collection, nor to provide the cover for a transaction whose completion was advised separately, eg, via an MT 400.]]></Description>
	<SwiftFields>
		<customizable>true</customizable>
		<modifiable>true</modifiable>
		<SwiftMessageType>User</SwiftMessageType>
		<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
		<Header>
		</Header>
		<Data>
			<Fields>
				<SwiftField Name="20">
					<SwiftFieldDef Name="20">
						<Generic>false</Generic>
						<Description><![CDATA[Reference]]></Description>
						<Option Name="">
							<Format><![CDATA[16x]]></Format>
							<Specification><![CDATA[(Sender's Reference)]]></Specification>
							<Description><![CDATA[Sender's Reference]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>M</Presence>
					<Options> </Options>
					<Validations>
						<SubField Name="Sender&apos;s_Reference">
							<Validation>
								<Options> </Options>
								<ErrorCode>T26</ErrorCode>
								<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
								<ValidationPattern Type="T26">
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="13C">
					<SwiftFieldDef Name="13">
						<Generic>false</Generic>
						<Description><![CDATA[Number Identification]]></Description>
						<Option Name="C">
							<Format><![CDATA[/8c/4!n1!x4!n]]></Format>
							<Specification><![CDATA[(Code)(Time indication)(Sign)(Time offset)]]></Specification>
							<Description><![CDATA[Time Indication]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>true</Repeating>
					<Presence>O</Presence>
					<Options>C</Options>
					<Validations>
						<SubField Name="Time_indication">
							<Validation>
								<Options>C</Options>
								<ErrorCode>T38</ErrorCode>
								<Comment><![CDATA[Time indication must be a valid time expressed as HHMM (Error code(s): T38).]]></Comment>
								<ValidationPattern Type="DATE">
									<Format>HHmm</Format>
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="Sign">
							<Validation>
								<Options>C</Options>
								<ErrorCode>T15</ErrorCode>
								<Comment><![CDATA[Sign is either "+" or "-" (Error code(s): T15).]]></Comment>
								<ValidationPattern Type="CODE">
									<Codes>
										<Code Name="+">
										</Code>
										<Code Name="-">
										</Code>
									</Codes>
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="Time_offset">
							<Validation>
								<Options>C</Options>
								<ErrorCode>T16</ErrorCode>
								<Comment><![CDATA[Time offset is expressed as HHMM, where the hour component, ie, 'HH', must be in the range of 00 through 13,and the minute component, ie, 'MM' must be in the range of 00 through 59. Any 'HH' or 'MM' component outside of these range checks will be disallowed (Error code(s): T16).]]></Comment>
								<ValidationPattern Type="Time Offset">
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="23B">
					<SwiftFieldDef Name="23">
						<Generic>false</Generic>
						<Description><![CDATA[Function of the Message]]></Description>
						<Option Name="B">
							<Format><![CDATA[4!c]]></Format>
							<Specification><![CDATA[(Type)]]></Specification>
							<Description><![CDATA[Bank Operation Code]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>M</Presence>
					<Options>B</Options>
					<Validations>
						<SubField Name="Type">
							<Validation>
								<Options>B</Options>
								<ErrorCode>T36</ErrorCode>
								<Comment><![CDATA[One of the following codes must be used (Error code(s): T36):]]></Comment>
								<ValidationPattern Type="CODE">
									<Codes>
										<Code Name="CRED">
											<DetailedName>Normal credit transfer</DetailedName>
											<Description>This message contains a credit transfer where there is no SWIFT Service Level involved.</Description>
										</Code>
										<Code Name="CRTS">
											<DetailedName>Test message</DetailedName>
											<Description>This message contains a credit transfer for test purposes.</Description>
										</Code>
										<Code Name="SPAY">
											<DetailedName>SWIFTPay</DetailedName>
											<Description>This message contains a credit transfer to be processed according to the SWIFTPay Service Level.</Description>
										</Code>
										<Code Name="SPRI">
											<DetailedName>Priority</DetailedName>
											<Description>This message contains a credit transfer to be processed according to the Priority Service Level.</Description>
										</Code>
										<Code Name="SSTD">
											<DetailedName>Standard</DetailedName>
											<Description>This message contains a credit transfer to be processed according to the Standard Service Level.</Description>
										</Code>
									</Codes>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="23E">
					<SwiftFieldDef Name="23">
						<Generic>false</Generic>
						<Description><![CDATA[Function of the Message]]></Description>
						<Option Name="E">
							<Format><![CDATA[4!c[/30x]]]></Format>
							<Specification><![CDATA[(Instruction Code)(Additional Information)]]></Specification>
							<Description><![CDATA[Instruction Code]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>true</Repeating>
					<Presence>O</Presence>
					<Options>E</Options>
					<Validations>
						<SubField Name="Instruction_Code">
							<Validation>
								<Options>E</Options>
								<ErrorCode>T47</ErrorCode>
								<Comment><![CDATA[Instruction Code must contain one of the following codes (Error code(s): T47):]]></Comment>
								<ValidationPattern Type="CODE">
									<Codes>
										<Code Name="SDVA">
											<DetailedName>Same Day Value</DetailedName>
											<Description>Payment must be executed with same day value to the beneficiary.</Description>
										</Code>
										<Code Name="INTC">
											<DetailedName>Intra-Company Payment</DetailedName>
											<Description>A payment between two companies belonging to the same group.</Description>
										</Code>
										<Code Name="REPA">
											<DetailedName>Related Payment</DetailedName>
											<Description>Payment has a related e-Payments reference.</Description>
										</Code>
										<Code Name="CORT">
											<DetailedName>Corporate Trade</DetailedName>
											<Description>Payment is made in settlement of a trade, eg, foreign exchange deal, securities transaction.</Description>
										</Code>
										<Code Name="HOLD">
											<DetailedName>Hold</DetailedName>
											<Description>Beneficiary customer/claimant will call; pay upon identification.</Description>
										</Code>
										<Code Name="CHQB">
											<DetailedName>Cheque</DetailedName>
											<Description>Pay beneficiary customer by cheque only. The optional account number line in field 59 must not be used.</Description>
										</Code>
										<Code Name="PHOB">
											<DetailedName>Phone Beneficiary</DetailedName>
											<Description>Please advise/contact beneficiary/claimant by phone.</Description>
										</Code>
										<Code Name="TELB">
											<DetailedName>Telecommunication</DetailedName>
											<Description>Please advise/contact beneficiary/claimant by the most efficient means of telecommunication.</Description>
										</Code>
										<Code Name="PHON">
											<DetailedName>Telephone</DetailedName>
											<Description>Please advise account with institution by phone.</Description>
										</Code>
										<Code Name="TELE">
											<DetailedName>Telecommunication</DetailedName>
											<Description>Please advise the account with institution by the most efficient means of telecommunication.</Description>
										</Code>
										<Code Name="PHOI">
											<DetailedName>Phone Intermediary</DetailedName>
											<Description>Please advise the intermediary institution by phone.</Description>
										</Code>
										<Code Name="TELI">
											<DetailedName>Telecommunication</DetailedName>
											<Description>Please advise the intermediary institution by the most efficient means of telecommunication.</Description>
										</Code>
									</Codes>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="26T">
					<SwiftFieldDef Name="26">
						<Generic>false</Generic>
						<Option Name="T">
							<Format><![CDATA[3!c]]></Format>
							<Specification><![CDATA[(Type)]]></Specification>
							<Description><![CDATA[Transaction Type Code]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>T</Options>
				</SwiftField>
				<SwiftField Name="32A">
					<SwiftFieldDef Name="32">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[6!n3!a15d]]></Format>
							<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
							<Description><![CDATA[Value Date/Currency/Interbank Settled Amount]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>M</Presence>
					<Options>A</Options>
					<Validations>
						<SubField Name="Date">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T50</ErrorCode>
								<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
								<ValidationPattern Type="DATE">
									<Format>yyMMdd</Format>
                                    <value-date>true</value-date>  
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="Currency">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T52</ErrorCode>
								<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
								<ValidationPattern Type="Currency Code">
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="Amount">
							<Validation>
								<Options>A</Options>
								<ErrorCode>C03</ErrorCode>
								<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43).]]></Comment>
								<ValidationPattern Type="Decimal">
									<currency-field>Currency</currency-field>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="33B">
					<SwiftFieldDef Name="33">
						<Generic>false</Generic>
						<Option Name="B">
							<Format><![CDATA[3!a15d]]></Format>
							<Specification><![CDATA[(Currency) (Amount)]]></Specification>
							<Description><![CDATA[Currency/Instructed Amount]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>B</Options>
					<Validations>
						<SubField Name="Currency">
							<Validation>
								<Options>B</Options>
								<ErrorCode>T52</ErrorCode>
								<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
								<ValidationPattern Type="Currency Code">
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="Amount">
							<Validation>
								<Options>B</Options>
								<ErrorCode>C03</ErrorCode>
								<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43).]]></Comment>
								<ValidationPattern Type="Decimal">
									<currency-field>Currency</currency-field>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="36">
					<SwiftFieldDef Name="36">
						<Generic>false</Generic>
						<Description><![CDATA[Quantity of Financial Instrument]]></Description>
						<Option Name="">
							<Format><![CDATA[12d]]></Format>
							<Specification><![CDATA[(Rate)]]></Specification>
							<Description><![CDATA[Exchange Rate]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options> </Options>
				</SwiftField>
				<SwiftField Name="50a">
					<SwiftFieldDef Name="50">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
							<Description><![CDATA[Ordering Customer]]></Description>
						</Option>
						<Option Name="F">
							<Format><![CDATA[35x(CRLF4*35x)]]></Format>
							<Specification><![CDATA[(Party Identifier)(Name & Address)]]></Specification>
							<Description><![CDATA[Ordering Customer]]></Description>
						</Option>
						<Option Name="K">
							<Format><![CDATA[([/34xCRLF])(4*35x)]]></Format>
							<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
							<Description><![CDATA[Ordering Customer]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>M</Presence>
					<Options>A, K, F</Options>
					<Validations>
						<SubField Name="Identifier_Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T27, T28, T29, T45</ErrorCode>
								<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
								<ValidationPattern Type="BIC">
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="51A">
					<SwiftFieldDef Name="51">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
							<Description><![CDATA[Sending Institution]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>A</Options>
				</SwiftField>
				<SwiftField Name="52a">
					<SwiftFieldDef Name="52">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
							<Description><![CDATA[Ordering Institution]]></Description>
						</Option>
						<Option Name="D">
							<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address) | (Party Identifier)(Name & Address)]]></Specification>
							<Description><![CDATA[Ordering Institution]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>A, D</Options>
					<Validations>
						<SubField Name="Identifier_Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T27, T28, T29, T45</ErrorCode>
								<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
								<ValidationPattern Type="BIC">
								</ValidationPattern>
							</Validation>
							<Validation>
								<Options>A</Options>
								<ErrorCode>C05</ErrorCode>
								<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
								<ValidationPattern Type="C05">
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="53a">
					<SwiftFieldDef Name="53">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
							<Description><![CDATA[Sender's Correspondent]]></Description>
						</Option>
						<Option Name="B">
							<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
							<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
							<Description><![CDATA[Sender's Correspondent]]></Description>
						</Option>
						<Option Name="D">
							<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
							<Description><![CDATA[Sender's Correspondent]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>A, B, D</Options>
					<Validations>
						<SubField Name="Identifier_Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T27, T28, T29, T45</ErrorCode>
								<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
								<ValidationPattern Type="BIC">
								</ValidationPattern>
							</Validation>
							<Validation>
								<Options>A</Options>
								<ErrorCode>C05</ErrorCode>
								<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
								<ValidationPattern Type="C05">
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="54a">
					<SwiftFieldDef Name="54">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
							<Description><![CDATA[Receiver's Correspondent]]></Description>
						</Option>
						<Option Name="B">
							<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
							<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
							<Description><![CDATA[Receiver's Correspondent]]></Description>
						</Option>
						<Option Name="D">
							<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
							<Description><![CDATA[Receiver's Correspondent]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>A, B, D</Options>
					<Validations>
						<SubField Name="Identifier_Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T27, T28, T29, T45</ErrorCode>
								<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
								<ValidationPattern Type="BIC">
								</ValidationPattern>
							</Validation>
							<Validation>
								<Options>A</Options>
								<ErrorCode>C05</ErrorCode>
								<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
								<ValidationPattern Type="C05">
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="55a">
					<SwiftFieldDef Name="55">
						<Generic>false</Generic>
						<Description><![CDATA[Third Reimbursement Institution]]></Description>
						<Option Name="A">
							<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
							<Description><![CDATA[Third Reimbursement Institution]]></Description>
						</Option>
						<Option Name="B">
							<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
							<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
							<Description><![CDATA[Third Reimbursement Institution]]></Description>
						</Option>
						<Option Name="D">
							<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
							<Description><![CDATA[Third Reimbursement Institution]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>A, B, D</Options>
					<Validations>
						<SubField Name="Identifier_Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T27, T28, T29, T45</ErrorCode>
								<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
								<ValidationPattern Type="BIC">
								</ValidationPattern>
							</Validation>
							<Validation>
								<Options>A</Options>
								<ErrorCode>C05</ErrorCode>
								<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
								<ValidationPattern Type="C05">
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="56a">
					<SwiftFieldDef Name="56">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
							<Description><![CDATA[Intermediary Institution]]></Description>
						</Option>
						<Option Name="C">
							<Format><![CDATA[/34x]]></Format>
							<Specification><![CDATA[(Party Identifier)]]></Specification>
							<Description><![CDATA[Intermediary Institution]]></Description>
						</Option>
						<Option Name="D">
							<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
							<Description><![CDATA[Intermediary Institution]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>A, C, D</Options>
					<Validations>
						<SubField Name="Identifier_Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T27, T28, T29, T45</ErrorCode>
								<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
								<ValidationPattern Type="BIC">
								</ValidationPattern>
							</Validation>
							<Validation>
								<Options>A</Options>
								<ErrorCode>C05</ErrorCode>
								<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
								<ValidationPattern Type="C05">
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="57a">
					<SwiftFieldDef Name="57">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
							<Description><![CDATA[Account With Institution]]></Description>
						</Option>
						<Option Name="B">
							<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
							<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
							<Description><![CDATA[Account With Institution]]></Description>
						</Option>
						<Option Name="C">
							<Format><![CDATA[/34x]]></Format>
							<Specification><![CDATA[(Party Identifier)]]></Specification>
							<Description><![CDATA[Account With Institution]]></Description>
						</Option>
						<Option Name="D">
							<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
							<Description><![CDATA[Account With Institution]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>A, B, C, D</Options>
					<Validations>
						<SubField Name="Identifier_Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T27, T28, T29, T45</ErrorCode>
								<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
								<ValidationPattern Type="BIC">
								</ValidationPattern>
							</Validation>
							<Validation>
								<Options>A</Options>
								<ErrorCode>C05</ErrorCode>
								<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
								<ValidationPattern Type="C05">
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="59a">
					<SwiftFieldDef Name="59">
						<Generic>false</Generic>
						<Option Name="">
							<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
							<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
							<Description><![CDATA[Beneficiary Customer]]></Description>
						</Option>
						<Option Name="A">
							<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
							<Description><![CDATA[Beneficiary Customer]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>M</Presence>
					<Options>A,  </Options>
					<Validations>
						<SubField Name="Identifier_Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T27, T28, T29, T45</ErrorCode>
								<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
								<ValidationPattern Type="BIC">
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="70">
					<SwiftFieldDef Name="70">
						<Generic>false</Generic>
						<Description><![CDATA[Narrative]]></Description>
						<Option Name="">
							<Format><![CDATA[4*35x]]></Format>
							<Specification><![CDATA[(Narrative)]]></Specification>
							<Description><![CDATA[Remittance Information]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options> </Options>
				</SwiftField>
				<SwiftField Name="71A">
					<SwiftFieldDef Name="71">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[3!a]]></Format>
							<Specification><![CDATA[(Code)]]></Specification>
							<Description><![CDATA[Details of Charges]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>M</Presence>
					<Options>A</Options>
					<Validations>
						<SubField Name="Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T08</ErrorCode>
								<Comment><![CDATA[One of the following codes must be used (Error code(s): T08):]]></Comment>
								<ValidationPattern Type="CODE">
									<Codes>
										<Code Name="BEN">
											<DetailedName>Beneficiary</DetailedName>
											<Description>All transaction charges are to be borne by the beneficiary customer.</Description>
										</Code>
										<Code Name="OUR">
											<DetailedName>Our customer charged</DetailedName>
											<Description>All transaction charges are to be borne by the ordering customer.</Description>
										</Code>
										<Code Name="SHA">
											<DetailedName>Shared charges</DetailedName>
											<Description>All transaction charges other than the charges of the financial institution servicing the ordering customer account are borne by the beneficiary customer.</Description>
										</Code>
									</Codes>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="71F">
					<SwiftFieldDef Name="71">
						<Generic>false</Generic>
						<Option Name="F">
							<Format><![CDATA[3!a15d]]></Format>
							<Specification><![CDATA[(Currency) (Amount)]]></Specification>
							<Description><![CDATA[Sender's Charges]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>true</Repeating>
					<Presence>O</Presence>
					<Options>F</Options>
					<Validations>
						<SubField Name="Currency">
							<Validation>
								<Options>F</Options>
								<ErrorCode>T52</ErrorCode>
								<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
								<ValidationPattern Type="Currency Code">
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="Amount">
							<Validation>
								<Options>F</Options>
								<ErrorCode>C03</ErrorCode>
								<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
								<ValidationPattern Type="Decimal">
									<currency-field>Currency</currency-field>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="71G">
					<SwiftFieldDef Name="71">
						<Generic>false</Generic>
						<Option Name="G">
							<Format><![CDATA[3!a15d]]></Format>
							<Specification><![CDATA[(Currency) (Amount)]]></Specification>
							<Description><![CDATA[Receiver's Charges]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>G</Options>
					<Validations>
						<SubField Name="Currency">
							<Validation>
								<Options>G</Options>
								<ErrorCode>T52</ErrorCode>
								<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
								<ValidationPattern Type="Currency Code">
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="Amount">
							<Validation>
								<Options>G</Options>
								<ErrorCode>C03</ErrorCode>
								<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43).]]></Comment>
								<ValidationPattern Type="Decimal">
									<currency-field>Currency</currency-field>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="72">
					<SwiftFieldDef Name="72">
						<Generic>false</Generic>
						<Option Name="">
							<Format><![CDATA[6*35x]]></Format>
							<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
							<Description><![CDATA[Sender to Receiver Information]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options> </Options>
				</SwiftField>
				<SwiftField Name="77B">
					<SwiftFieldDef Name="77">
						<Generic>false</Generic>
						<Option Name="B">
							<Format><![CDATA[3*35x]]></Format>
							<Specification><![CDATA[(Narrative)]]></Specification>
							<Description><![CDATA[Regulatory Reporting]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>B</Options>
				</SwiftField>
				<SwiftField Name="77T">
					<SwiftFieldDef Name="77">
						<Generic>false</Generic>
						<Option Name="T">
							<Format><![CDATA[9000z]]></Format>
							<Specification><![CDATA[(Envelope Contents)]]></Specification>
							<Description><![CDATA[Envelope Contents]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>T</Options>
				</SwiftField>
			</Fields>
		</Data>
		<Trailer>
		</Trailer>
	</SwiftFields>
	<validationrules name="Default">
		<hdrvalidationrules>
			<fieldvalidations>
				<fieldvalidation>
					<name>U08</name>
					<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        if(userHeader[0].GetString("Validation_Flag") != "REMIT") {
            return false;
        }
    }
}
return true;
]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>U08</error-code>
					<actionmessage><![CDATA["Invalid syntax, format, code word in tag 119(Validation Flag). Allowed value is REMIT."]]></actionmessage>
				</fieldvalidation>
			</fieldvalidations>
		</hdrvalidationrules>
		<datavalidationrules>
			<fieldvalidations>
				<fieldvalidation>
					<name>C1-1</name>
					<fieldname>33B.Currency</fieldname>
					<formula><![CDATA[If($value == F32A[0].Currency, 
   F36.$size == 0, 
   F36.$size > 0)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D75</error-code>
					<actionmessage><![CDATA["If field 33B is present and the currency code is different from the currency code in field 32A, field 36 must be present, otherwise field 36 is not allowed."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C1-2</name>
					<fieldname>36</fieldname>
					<formula><![CDATA[F33B.$size > 0]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D75</error-code>
					<actionmessage><![CDATA["If field 33B is present and the currency code is different from the currency code in field 32A, field 36 must be present, otherwise field 36 is not allowed."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C2</name>
					<comment><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, ES, EE, FI, FR, GB, GF, GI, GP, GR, HU, IE, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then field 33B is mandatory, otherwise field 33B is optional."]]></comment>
					<formula><![CDATA[def header = $this.Header;
def appheader;
if(header.GetFieldCount() == 0 || (header.getfieldcount() > 0 && header.GetFieldIndex("Basic_Header") == -1)) {
	// No Header or FICC Header
	return true;
}
if(header.GetFieldCount() == 4) {
	// Input/output header
    appheader = If(header.GetSection(1).$size > 0, 
                   header.GetSection(1)[0], 
                   header.GetSection(2)[0]);
}
else {
    appheader = header.GetSection(1)[0];
}
def basicheader = header.GetSection(0)[0];
def ioIdentifier = appheader.GetString("Input_Output_Identifier");
def mir = (If(ioIdentifier == "O", 
           GetString(appheader, "Message Input Reference"), 
           ""));
def receiverAddress = (If(ioIdentifier == "I", 
                       GetString(appheader, "Receiver's Address"), 
                       ""));
def senderCountryCode = (If(ioIdentifier == "I", 
                         Mid(basicheader.GetString("LT Identifier"), 4, 2), 
                         Mid(mir, 10, 2)));
def receiverCountryCode = (If(ioIdentifier == "I", 
                           Mid(receiverAddress, 4, 2), 
                           Mid(basicheader.GetString("LT Identifier"), 4, 2)));
If(In(senderCountryCode, "AD", "AT", "BE", "BG", "BV", "CH", "CY", 
      "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GF", 
      "GI", "GP", "GR", "HU", "IE", "IS", "IT", "LI", "LT", 
      "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", "PM", 
      "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", "VA") && 
     In(receiverCountryCode, "AD", "AT", "BE", "BG", "BV", "CH", 
        "CY", "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", 
        "GF", "GI", "GP", "GR", "HU", "IE", "IS", "IT", "LI", 
        "LT", "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", 
        "PM", "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", 
        "VA"), 
   F33B.$size > 0, 
   true);
]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D49</error-code>
					<actionmessage><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, ES, EE, FI, FR, GB, GF, GI, GP, GR, HU, IE, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then field 33B is mandatory, otherwise field 33B is optional."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C3-1</name>
					<fieldname>23E.Instruction_Code</fieldname>
					<formula><![CDATA[If(F23B[0].Type == "SPRI", 
   In($value, "SDVA", "TELB", "PHOB", "INTC"), 
   true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E01</error-code>
					<actionmessage><![CDATA["If field 23B contains the code SPRI, field 23E may contain only the codes SDVA, TELB, PHOB, INTC."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C3-2</name>
					<fieldname>23B.Type</fieldname>
					<formula><![CDATA[If(In($value, "SSTD", "SPAY"), F23E.$size == 0, true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E02</error-code>
					<actionmessage><![CDATA["If field 23B contains one of the codes SSTD or SPAY, field 23E must not be used."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C4</name>
					<fieldname>23B.Type</fieldname>
					<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   If(F53a.$size > 0, F53a[0].FormatOption != 'D', true), 
   true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E03</error-code>
					<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY, field 53a must not be used with option D."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C5</name>
					<fieldname>23B.Type</fieldname>
					<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   If(F53a.$size > 0 && F53a[0].FormatOption == 'B', 
      IsNotNull(F53a[0].Party_Identifier), 
      true), 
   true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E04</error-code>
					<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY and field 53a is present with option B, Party Identifier must be present in field 53B."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C6</name>
					<fieldname>23B.Type</fieldname>
					<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   If(F54a.$size > 0, F54a[0].FormatOption == 'A', true), 
   true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E05</error-code>
					<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY, field 54a may be used with option A only."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C7</name>
					<fieldname>55a</fieldname>
					<formula><![CDATA[F53a.$size > 0 && F54a.$size > 0]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E06</error-code>
					<actionmessage><![CDATA["If field 55a is present, then both fields 53a and 54a must also be present."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C8</name>
					<fieldname>23B.Type</fieldname>
					<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   If(F55a.$size > 0, F55a[0].FormatOption == 'A', true), 
   true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E07</error-code>
					<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY, field 55a may be used with option A only."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C9</name>
					<fieldname>56a</fieldname>
					<formula><![CDATA[F57a.$size > 0]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>C81</error-code>
					<actionmessage><![CDATA["If field 56a is present, field 57a must also be present."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C10A</name>
					<fieldname>23B.Type</fieldname>
					<formula><![CDATA[If($value == "SPRI", F56a.$size == 0, true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E16</error-code>
					<actionmessage><![CDATA["If field 23B contains the code SPRI, field 56a must not be present."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C10B</name>
					<fieldname>23B.Type</fieldname>
					<formula><![CDATA[If(In($value, "SSTD", "SPAY"), 
   If(F56a.$size > 0, 
      F56a[0].FormatOption == 'A' || 
        (F56a[0].FormatOption == 'C' && 
           Length(F56a[0].Party_Identifier) >= 3 && 
           StartsWith(F56a[0].Party_Identifier, "/") && 
           In(Mid(F56a[0].Party_Identifier, 1, 2), "AT", 
              "AU", "BL", "CC", "CH", "CP", "ES", "FW", "GR", 
              "HK", "IE", "IN", "IT", "NZ", "PT", "RT", "RU", 
              "SC", "SW")), 
      true), 
   true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E17</error-code>
					<actionmessage><![CDATA["If field 23B contains one of the codes SSTD or SPAY, field 56a may be used with either option A or option C. If option C is used, it must contain a clearing code."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C11</name>
					<fieldname>23B.Type</fieldname>
					<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   If(F57a.$size > 0, 
      In(F57a[0].FormatOption, 'A', 'C') || 
        (F57a[0].FormatOption == 'D' && 
           IsNotNull(F57a[0].Party_Identifier)), 
      true), 
   true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E09</error-code>
					<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY, field 57a may be used with option A, option C or option D. Subfield 1 (Party Identifier) in option D must be present."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C12</name>
					<fieldname>23B.Type</fieldname>
					<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   IsNotNull(F59a[0].Account), 
   true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E10</error-code>
					<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY, subfield 1 (Account) in field 59a Beneficiary Customer is mandatory."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C13</name>
					<fieldname>23E.Instruction_Code</fieldname>
					<formula><![CDATA[If($value == "CHQB", IsNull(F59a[0].Account), true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E18</error-code>
					<actionmessage><![CDATA["If any field 23E contains the code CHQB, subfield 1 (Account) in field 59a Beneficiary Customer is not allowed."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C14</name>
					<fieldname>70</fieldname>
					<formula><![CDATA[F77T.$size == 0]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E12</error-code>
					<actionmessage><![CDATA["Fields 70 and 77T are mutually exclusive."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C15A</name>
					<fieldname>71A.Code</fieldname>
					<formula><![CDATA[If($value == "OUR", F71F.$size == 0, true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E13</error-code>
					<actionmessage><![CDATA["If field 71A contains OUR, then field 71F is not allowed and field 71G is optional."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C15B</name>
					<fieldname>71A.Code</fieldname>
					<formula><![CDATA[If($value == "SHA", F71G.$size == 0, true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D50</error-code>
					<actionmessage><![CDATA["If field 71A contains SHA, then field(s) 71F is(are) optional and field 71G is not allowed."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C15C</name>
					<fieldname>71A.Code</fieldname>
					<formula><![CDATA[If($value == "BEN", F71F.$size > 0 && F71G.$size == 0, true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E15</error-code>
					<actionmessage><![CDATA["If field 71A contains BEN, then at least one occurrence of field 71F is mandatory and field 71G is not allowed."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C16</name>
					<formula><![CDATA[If(F71F.$size > 0 || F71G.$size > 0, F33B.$size > 0, true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D51</error-code>
					<actionmessage><![CDATA["If either field 71F (at least one occurrence) or field 71G is present, then field 33B is mandatory, otherwise field 33B is optional."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C17</name>
					<fieldname>23E.Instruction_Code</fieldname>
					<formula><![CDATA[If(In($value, "TELI", "PHOI"), F56a.$size > 0, true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E44</error-code>
					<actionmessage><![CDATA["If field 56a is not present, no field 23E may contain TELI or PHOI."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C18</name>
					<fieldname>23E.Instruction_Code</fieldname>
					<formula><![CDATA[If(In($value, "TELE", "PHON"), F57a.$size > 0, true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E45</error-code>
					<actionmessage><![CDATA["If field 57a is not present, no field 23E may contain TELE or PHON."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C19</name>
					<fieldname>71G.Currency</fieldname>
					<formula><![CDATA[$value == F32A[0].Currency]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>C02</error-code>
					<actionmessage><![CDATA["The currency code in the fields 71G and 32A must be the same."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F23E-A</name>
					<fieldname>23E.Additional_Information</fieldname>
					<formula><![CDATA[In(F23E.Instruction_Code, "PHON", "PHOB", "PHOI", "TELE", "TELB", 
   "TELI", "HOLD", "REPA")]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D97</error-code>
					<actionmessage><![CDATA["Additional Information is only allowed when Instruction Code consists of one of the following codes: PHON, PHOB, PHOI, TELE, TELB, TELI, HOLD or REPA."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F23E-C</name>
					<fieldname>23E</fieldname>
					<formula><![CDATA[F23E.$size == SecGroup(F23E, "Instruction_Code").$size]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E46</error-code>
					<actionmessage><![CDATA["If this field is repeated, the same code word must not be present more than once."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F23E-B1</name>
					<fieldname>23E.Instruction_Code</fieldname>
					<formula><![CDATA[If(In($value, "SDVA", "INTC", "REPA", "CORT"), 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "HOLD"), 
   true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D67</error-code>
					<actionmessage><![CDATA["When field 23E is used more than once, the following combinations are not allowed: SDVA with HOLD, INTC with HOLD, REPA with HOLD, CORT with HOLD."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F23E-B2</name>
					<fieldname>23E.Instruction_Code</fieldname>
					<formula><![CDATA[If(In($value, "SDVA", "INTC", "REPA", "CORT", "HOLD"), 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "CHQB"), 
   true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D67</error-code>
					<actionmessage><![CDATA["When field 23E is used more than once, the following combinations are not allowed: SDVA with CHQB, INTC with CHQB, REPA with CHQB, CORT with CHQB, HOLD with CHQB."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F23E-B4</name>
					<fieldname>23E.Instruction_Code</fieldname>
					<formula><![CDATA[If($value == "REPA", 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "CORT"), 
   true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D67</error-code>
					<actionmessage><![CDATA["When field 23E is used more than once, the following combination is not allowed: REPA with CORT."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F23E-B5</name>
					<fieldname>23E.Instruction_Code</fieldname>
					<formula><![CDATA[If($value == "PHOB", 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "TELB"), 
   true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D67</error-code>
					<actionmessage><![CDATA["When field 23E is used more than once, the following combination is not allowed: PHOB with TELB."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F23E-B6</name>
					<fieldname>23E.Instruction_Code</fieldname>
					<formula><![CDATA[If($value == "PHON", 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "TELE"), 
   true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D67</error-code>
					<actionmessage><![CDATA["When field 23E is used more than once, the following combination is not allowed: PHON with TELE."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F23E-B7</name>
					<fieldname>23E.Instruction_Code</fieldname>
					<formula><![CDATA[If($value == "PHOI", 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "TELI"), 
   true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D67</error-code>
					<actionmessage><![CDATA["When field 23E is used more than once, the following combination is not allowed: PHOI with TELI."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F71G-A</name>
					<fieldname>71G.Amount</fieldname>
					<formula><![CDATA[$value > 0]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D57</error-code>
					<actionmessage><![CDATA["If field 71G is present, the amount must not equal '0'."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F51A-A</name>
					<formula><![CDATA[F51A.$size == 0]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D63</error-code>
					<actionmessage><![CDATA["Field 51A is only valid in IFT."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F77T-A</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(F77T.$size > 0) {
        return (userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag") && 
                  userHeader[0].GetString("Validation_Flag") == "REMIT");
    }
    else {
        return (userHeader.$size == 0 || userHeader[0].IsNull("Validation_Flag") || 
                  userHeader[0].GetString("Validation_Flag") != "REMIT");
    }
}
return true;
]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>G06</error-code>
					<actionmessage><![CDATA["If the field is used, the Sender must set the validation flag to REMIT in field 119 of the User Header of the message. If field 77T is not present, the code of the validation flag must not be REMIT."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F72-A</name>
					<fieldname>72.Narrative_-_Structured_Format</fieldname>
					<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T32</error-code>
					<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F50a-A</name>
					<fieldname>50a.Party_Identifier</fieldname>
					<comment><![CDATA[F50a-A
With option F, subfield 1 (Party Identifier), one of the following line formats must be used (Error code(s): T54):
Line format 1 :/34x (Account)
Line format 2 :4!a/2!a/27x (Code)(Country Code)(Identifier)]]></comment>
					<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FPartyIdFormat($value))]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T54</error-code>
					<actionmessage><![CDATA["Invalid 'Party Identifier' value. One of the following line formats must be used: /34x (Account) or 4!a/2!a/27x (Code)(Country Code)(Identifier)"]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F50a-B</name>
					<fieldname>50a.Party_Identifier</fieldname>
					<comment><![CDATA[F50a-B
In option F, when subfield 1 Party Identifier is used with the (Code)(Country Code)(Identifier) format, one of the following codes must be used (Error code(s): T55): ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."
]]></comment>
					<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FPartyIdCode($value))
/* get the code from party identifier if format is 4!a/2!a/27x */   ]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T55</error-code>
					<actionmessage><![CDATA["Invalid 'Party Identifier' value. When 'Party Identifier' is used with the format (Code)(Country Code)(Identifier), one of following codes must be used: ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F50a-C</name>
					<fieldname>50a.Name_&amp;_Address</fieldname>
					<comment><![CDATA[F50a-C
With option F, subfield 2 (Name & Address), the following line format must be used for all lines: 1!n/33x (Number)(Details). (Error code(s): T54).]]></comment>
					<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FNmandAdrFormat($value))]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T54</error-code>
					<actionmessage><![CDATA["Invalid 'Name & Address' value. With option F, subfield 2 (Name & Address), the following line format must be used for all lines :1!n/33x (Number)(Details)."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F50a-D</name>
					<fieldname>50a.Party_Identifier</fieldname>
					<comment><![CDATA[F50a-D
In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code (Error code(s): T73).
]]></comment>
					<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FPartyIdCountryCode($value))]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T73</error-code>
					<actionmessage><![CDATA["Invalid 'Party Identifier' value. In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F50a-E</name>
					<fieldname>50a.Name_&amp;_Address</fieldname>
					<comment><![CDATA[F50a-E
 With option F - subfield 2 (Name & Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec (Error code(s): T56).]]></comment>
					<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FNmandAdrLines($value, F50a.Party_Identifier))]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T56</error-code>
					<actionmessage><![CDATA["Invalid 'Name & Address' value. With option F - subfield 2 (Name & Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F50a-F</name>
					<fieldname>50a.Name_&amp;_Address</fieldname>
					<comment><![CDATA[F50a-F
Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT (Error code(s): T50).
]]></comment>
					<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FNmandAdrDate($value))]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T50</error-code>
					<actionmessage><![CDATA["Invalid 'Name & Address' value. Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F50a-G</name>
					<fieldname>50a.Name_&amp;_Address</fieldname>
					<comment><![CDATA[F50a-G
Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code
(Error code(s): T73).]]></comment>
					<formula><![CDATA[Implies(F50a.FormatOption == 'F',Verify50FNmandAdrCtryCode($value))]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T73</error-code>
					<actionmessage><![CDATA["Invalid 'Name & Address' value. Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F52a-A</name>
					<fieldname>52a.Party_Identifier</fieldname>
					<comment><![CDATA[F52a-A
The value specified for Party Identifier should indicate a national clearing system code.]]></comment>
					<formula><![CDATA[VerifyPartyIdentifier($value, F52a.FormatOption, false, false);]]></formula>
					<enabled>false</enabled>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>F52a-A</error-code>
					<actionmessage><![CDATA["Party Identifier is not valid. The value following the national clearing system code does not conform to the format specified for that code."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F56a-A</name>
					<fieldname>56a.Party_Identifier</fieldname>
					<comment><![CDATA[F56a-A
The value specified for Party Identifier should indicate a national clearing system code.]]></comment>
					<formula><![CDATA[VerifyPartyIdentifier($value, F56a.FormatOption, true, false);]]></formula>
					<enabled>false</enabled>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>F56a-A</error-code>
					<actionmessage><![CDATA["Party Identifier is not valid. The value following the national clearing system code does not conform to the format specified for that code."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F57a-A</name>
					<fieldname>57a.Party_Identifier</fieldname>
					<comment><![CDATA[F57a-A
The value specified for Party Identifier should indicate a national clearing system code.]]></comment>
					<formula><![CDATA[VerifyPartyIdentifier($value, F57a.FormatOption, true, true);]]></formula>
					<enabled>false</enabled>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>F57a-A</error-code>
					<actionmessage><![CDATA["Party Identifier is not valid. The value following the national clearing system code does not conform to the format specified for that code."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F23E-D</name>
					<fieldname>23E</fieldname>
					<formula><![CDATA[$codesOrder = "SDVA,INTC,REPA,CORT,HOLD,CHQB,PHOB,TELB,PHON,TELE,PHOI,TELI";
$prevCodeIndex = -1;
for ($i=0; $i < F23E.$size; $i = $i + 1) {
   $codeIndex = FindFirst($codesOrder, F23E[$i].Instruction_Code);
   if ($codeIndex < $prevCodeIndex) {
      return false;
   }
   else {
      $prevCodeIndex = $codeIndex;
   }
} 
return true;]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D98</error-code>
					<actionmessage><![CDATA["If field 23E is repeated, the codes must appear in the following order: SDVA,INTC,REPA,CORT,BONL,HOLD,CHQB,PHOB,TELB,PHON,TELE,PHOI,TELI"]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>ERI-1</name>
					<comment><![CDATA["For specific message types, if the value date (if field with Value Date is present in the message) is after 31 December 2001, then the 13 European currencies (referenced as NCD)must not be used as the currency of settlement (Error Code: E76)."]]></comment>
					<formula><![CDATA[applyERIValidation(F32A[0], "Date", F32A[0], "Currency")]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E76</error-code>
					<actionmessage><![CDATA["For specific message types, if the value date (if field with Value Date is present in the message) is after 31 December 2001, then the 13 European currencies (referenced as NCD)must not be used as the currency of settlement (Error Code: E76)."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>ERI-2</name>
					<fieldname>72.Narrative_-_Structured_Format</fieldname>
					<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T47</error-code>
					<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
				</fieldvalidation>
    	<fieldvalidation>
						<name>F-72-B</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def lines = Split("\r\n", $value);
def str = Left($value, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-72-C</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def lines = Split("\r\n", $value);
if(lines.Length() > 3) {
    for(def i = 0; i < lines.Length(); ++i) {
        if(lines[i].Substring(0, 6) == "/CHGS/") {
            def format = lines[i].Substring(6);
            def cur = format.Substring(0, 3);
            def amt = format.Substring(3);
            def Lastslash = FindFirst(amt, "/");
            if(Lastslash != -1)
            	amt = amt.left(Lastslash);
            def pos = FindFirst(amt, ",");
            amt = Replace(amt, ",", ".");
            def isvalid = IsValidDecimals(cur, amt);
            if(!isvalid)
                return false;

        }
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C03</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: The number of digits following the comma must not exceed the maximum number allowed for the currency specified."]]></actionmessage>
					</fieldvalidation>
			</fieldvalidations>
		</datavalidationrules>
		<tlrvalidationrules>
			<fieldvalidations>
			</fieldvalidations>
		</tlrvalidationrules>
	</validationrules>
</SwiftMessageFormat>

